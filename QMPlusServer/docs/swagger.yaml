basePath: /
definitions:
  api.AddMenuAuthorityInfo:
    properties:
      authorityId:
        type: string
      menus:
        items:
          $ref: '#/definitions/dbModel.BaseMenu'
        type: array
    type: object
  api.AuthAndPathIn:
    properties:
      apis:
        items:
          $ref: '#/definitions/dbModel.Api'
        type: array
      authorityId:
        type: string
    type: object
  api.AuthorityIdInfo:
    properties:
      authorityId:
        type: string
    type: object
  api.ChangePasswordStutrc:
    properties:
      newPassword:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  api.CreateApiParams:
    properties:
      description:
        type: string
      path:
        type: string
    type: object
  api.CreateAuthorityPatams:
    properties:
      authorityId:
        type: string
      authorityName:
        type: string
    type: object
  api.DeleteApiParams:
    type: object
  api.DeleteAuthorityPatams:
    properties:
      authorityId:
        type: integer
    type: object
  api.IdInfo:
    properties:
      id:
        type: number
    type: object
  api.RegistAndLoginStuct:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dbModel.Api:
    properties:
      description:
        type: string
      path:
        type: string
    type: object
  dbModel.BaseMenu:
    properties:
      children:
        items:
          $ref: '#/definitions/dbModel.BaseMenu'
        type: array
      component:
        type: string
      hidden:
        type: boolean
      icon:
        type: string
      name:
        type: string
      nickName:
        type: string
      parentId:
        type: string
      path:
        type: string
      title:
        type: string
    type: object
  modelInterface.PageInfo:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  license: {}
  title: Swagger Example API
  version: 0.0.1
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.CreateApiParams'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 为指定角色创建api
      tags:
      - Api
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.DeleteApiParams'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除指定角色api
      tags:
      - Api
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取用户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - Api
  /api/setAuthAndPath:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建api和角色关系
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.AuthAndPathIn'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建api和角色关系
      tags:
      - Api
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.CreateAuthorityPatams'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.DeleteAuthorityPatams'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取用户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - authority
  /base/login:
    post:
      parameters:
      - description: 用户登录接口
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.RegistAndLoginStuct'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /base/regist:
    post:
      parameters:
      - description: 用户注册接口
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.RegistAndLoginStuct'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"注册成功"}'
          schema:
            type: string
      summary: 用户注册账号
      tags:
      - Base
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取基础menu列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 增加menu和角色关联关系
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.AuthorityIdInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - authorityAndMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除菜单
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.IdInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 可以什么都不填
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.RegistAndLoginStuct'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - authorityAndMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 可以什么都不填
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.RegistAndLoginStuct'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - authorityAndMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取基础menu列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - menu
  /user/changePassword:
    post:
      parameters:
      - description: 用户修改密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.ChangePasswordStutrc'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - User
  /user/getInfoList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取用户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - User
  /user/uploadHeaderImg:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 用户上传头像
        in: formData
        name: headerImg
        required: true
        type: file
      - description: 用户上传头像
        in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户上传头像
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
